"use server"

// This is a server action that fetches related subreddits
export async function findRelatedSubreddits(subreddit: string): Promise<any[]> {
  try {
    // Remove 'r/' prefix if present and clean the input
    const cleanSubreddit = subreddit.replace(/^r\//, "").toLowerCase().trim()

    if (!cleanSubreddit) {
      throw new Error("Please provide a valid subreddit name")
    }

    // First, verify the subreddit exists
    const subredditInfo = await fetchSubredditInfo(cleanSubreddit)

    if (!subredditInfo) {
      throw new Error(`Subreddit r/${cleanSubreddit} not found`)
    }

    // Then find related subreddits
    // This could be done through various methods:
    // 1. Reddit API (if available)
    // 2. Web scraping (with proper permissions)
    // 3. A database of pre-computed relationships

    // For this example, we'll use a simulated approach
    const relatedSubreddits = await simulateRelatedSubreddits(cleanSubreddit)

    return relatedSubreddits
  } catch (error) {
    console.error("Error finding related subreddits:", error)
    throw new Error("Failed to find related subreddits")
  }
}

// Fetch information about a subreddit to verify it exists
async function fetchSubredditInfo(subreddit: string) {
  try {
    // In a real implementation, this would call the Reddit API
    // For this example, we'll simulate a successful response for most inputs

    // Simulate some "not found" cases
    if (subreddit === "thisisnotarealsubredditname12345") {
      return null
    }

    return {
      name: subreddit,
      subscribers: Math.floor(Math.random() * 1000000) + 1000,
      description: `This is the r/${subreddit} community on Reddit.`,
      url: `/r/${subreddit}`,
    }
  } catch (error) {
    console.error("Error fetching subreddit info:", error)
    return null
  }
}

// Simulate finding related subreddits
async function simulateRelatedSubreddits(subreddit: string) {
  // This is a simulation - in a real app, you would use:
  // 1. Reddit API data
  // 2. A database of related subreddits
  // 3. Machine learning to find similarities

  // Sample data based on common subreddit relationships
  const relatedSubredditsMap: Record<string, any[]> = {
    programming: [
      { name: "webdev", subscribers: 1250000, similarityScore: 0.95 },
      { name: "learnprogramming", subscribers: 980000, similarityScore: 0.92 },
      { name: "coding", subscribers: 450000, similarityScore: 0.9 },
      { name: "javascript", subscribers: 890000, similarityScore: 0.88 },
      { name: "python", subscribers: 1100000, similarityScore: 0.87 },
      { name: "compsci", subscribers: 520000, similarityScore: 0.85 },
      { name: "cscareerquestions", subscribers: 670000, similarityScore: 0.84 },
      { name: "programminghumor", subscribers: 1300000, similarityScore: 0.82 },
      { name: "webdesign", subscribers: 580000, similarityScore: 0.8 },
      { name: "frontend", subscribers: 420000, similarityScore: 0.79 },
      { name: "reactjs", subscribers: 750000, similarityScore: 0.78 },
      { name: "node", subscribers: 380000, similarityScore: 0.77 },
      { name: "typescript", subscribers: 420000, similarityScore: 0.76 },
      { name: "rust", subscribers: 310000, similarityScore: 0.75 },
      { name: "golang", subscribers: 290000, similarityScore: 0.74 },
      { name: "cpp", subscribers: 270000, similarityScore: 0.73 },
      { name: "java", subscribers: 350000, similarityScore: 0.72 },
      { name: "csharp", subscribers: 320000, similarityScore: 0.71 },
      { name: "php", subscribers: 280000, similarityScore: 0.7 },
      { name: "ruby", subscribers: 240000, similarityScore: 0.69 },
      { name: "softwareengineering", subscribers: 410000, similarityScore: 0.68 },
      { name: "algorithms", subscribers: 230000, similarityScore: 0.67 },
      { name: "datascience", subscribers: 520000, similarityScore: 0.66 },
      { name: "machinelearning", subscribers: 680000, similarityScore: 0.65 },
      { name: "artificial", subscribers: 320000, similarityScore: 0.64 },
      { name: "computerscience", subscribers: 480000, similarityScore: 0.63 },
      { name: "linux", subscribers: 720000, similarityScore: 0.62 },
      { name: "opensource", subscribers: 290000, similarityScore: 0.61 },
      { name: "gamedev", subscribers: 510000, similarityScore: 0.6 },
      { name: "devops", subscribers: 280000, similarityScore: 0.59 },
      { name: "aws", subscribers: 240000, similarityScore: 0.58 },
      { name: "docker", subscribers: 220000, similarityScore: 0.57 },
      { name: "kubernetes", subscribers: 190000, similarityScore: 0.56 },
      { name: "databases", subscribers: 170000, similarityScore: 0.55 },
      { name: "sql", subscribers: 210000, similarityScore: 0.54 },
      { name: "mongodb", subscribers: 160000, similarityScore: 0.53 },
      { name: "git", subscribers: 230000, similarityScore: 0.52 },
      { name: "github", subscribers: 250000, similarityScore: 0.51 },
      { name: "vscode", subscribers: 280000, similarityScore: 0.5 },
      { name: "vim", subscribers: 210000, similarityScore: 0.49 },
    ],
    gaming: [
      { name: "games", subscribers: 3200000, similarityScore: 0.95 },
      { name: "pcgaming", subscribers: 2800000, similarityScore: 0.93 },
      { name: "gamedeals", subscribers: 1900000, similarityScore: 0.91 },
      { name: "patientgamers", subscribers: 650000, similarityScore: 0.89 },
      { name: "truegaming", subscribers: 580000, similarityScore: 0.87 },
      { name: "gamernews", subscribers: 420000, similarityScore: 0.85 },
      { name: "gamingsuggestions", subscribers: 310000, similarityScore: 0.83 },
      { name: "shouldibuythisgame", subscribers: 280000, similarityScore: 0.81 },
      { name: "pcmasterrace", subscribers: 5200000, similarityScore: 0.79 },
      { name: "steam", subscribers: 1400000, similarityScore: 0.77 },
      { name: "ps4", subscribers: 4800000, similarityScore: 0.75 },
      { name: "ps5", subscribers: 1900000, similarityScore: 0.73 },
      { name: "xboxone", subscribers: 3100000, similarityScore: 0.71 },
      { name: "nintendoswitch", subscribers: 3600000, similarityScore: 0.69 },
      { name: "nintendo", subscribers: 1800000, similarityScore: 0.67 },
      { name: "esports", subscribers: 950000, similarityScore: 0.65 },
      { name: "speedrun", subscribers: 420000, similarityScore: 0.63 },
      { name: "gamemusic", subscribers: 280000, similarityScore: 0.61 },
      { name: "gamephysics", subscribers: 750000, similarityScore: 0.59 },
      { name: "indiegaming", subscribers: 520000, similarityScore: 0.57 },
      { name: "roguelikes", subscribers: 180000, similarityScore: 0.55 },
      { name: "rpg_gamers", subscribers: 290000, similarityScore: 0.53 },
      { name: "mmorpg", subscribers: 320000, similarityScore: 0.51 },
      { name: "retrogaming", subscribers: 480000, similarityScore: 0.49 },
      { name: "emulation", subscribers: 320000, similarityScore: 0.47 },
      { name: "gamecollecting", subscribers: 380000, similarityScore: 0.45 },
      { name: "battlestations", subscribers: 1200000, similarityScore: 0.43 },
      { name: "buildapc", subscribers: 4900000, similarityScore: 0.41 },
      { name: "gamedev", subscribers: 510000, similarityScore: 0.39 },
      { name: "gamingpc", subscribers: 680000, similarityScore: 0.37 },
      { name: "gamingmemes", subscribers: 420000, similarityScore: 0.35 },
      { name: "gamingcirclejerk", subscribers: 520000, similarityScore: 0.33 },
      { name: "twitchstreams", subscribers: 280000, similarityScore: 0.31 },
      { name: "gamereviews", subscribers: 190000, similarityScore: 0.29 },
      { name: "gamingdeals", subscribers: 320000, similarityScore: 0.27 },
      { name: "freegames", subscribers: 480000, similarityScore: 0.25 },
      { name: "gameswap", subscribers: 210000, similarityScore: 0.23 },
      { name: "gamingsetups", subscribers: 290000, similarityScore: 0.21 },
      { name: "gamingnostalgia", subscribers: 180000, similarityScore: 0.19 },
      { name: "gamingmerch", subscribers: 150000, similarityScore: 0.17 },
    ],
    movies: [
      { name: "television", subscribers: 2700000, similarityScore: 0.95 },
      { name: "flicks", subscribers: 450000, similarityScore: 0.93 },
      { name: "truefilm", subscribers: 320000, similarityScore: 0.91 },
      { name: "moviedetails", subscribers: 1800000, similarityScore: 0.89 },
      { name: "boxoffice", subscribers: 580000, similarityScore: 0.87 },
      { name: "filmmakers", subscribers: 290000, similarityScore: 0.85 },
      { name: "moviesuggestions", subscribers: 410000, similarityScore: 0.83 },
      { name: "horror", subscribers: 950000, similarityScore: 0.81 },
      { name: "documentaries", subscribers: 1700000, similarityScore: 0.79 },
      { name: "scifi", subscribers: 1200000, similarityScore: 0.77 },
      { name: "fantasy", subscribers: 850000, similarityScore: 0.75 },
      { name: "anime", subscribers: 3100000, similarityScore: 0.73 },
      { name: "marvelstudios", subscribers: 2400000, similarityScore: 0.71 },
      { name: "starwars", subscribers: 2100000, similarityScore: 0.69 },
      { name: "dccomics", subscribers: 980000, similarityScore: 0.67 },
      { name: "moviecritic", subscribers: 280000, similarityScore: 0.65 },
      { name: "oscars", subscribers: 320000, similarityScore: 0.63 },
      { name: "filmtheory", subscribers: 240000, similarityScore: 0.61 },
      { name: "classicfilms", subscribers: 190000, similarityScore: 0.59 },
      { name: "bollywood", subscribers: 320000, similarityScore: 0.57 },
      { name: "foreignfilms", subscribers: 180000, similarityScore: 0.55 },
      { name: "movieposters", subscribers: 210000, similarityScore: 0.53 },
      { name: "moviemusic", subscribers: 240000, similarityScore: 0.51 },
      { name: "shortfilms", subscribers: 170000, similarityScore: 0.49 },
      { name: "filmjunk", subscribers: 150000, similarityScore: 0.47 },
      { name: "netflixbestof", subscribers: 980000, similarityScore: 0.45 },
      { name: "hbomax", subscribers: 420000, similarityScore: 0.43 },
      { name: "disneyplus", subscribers: 580000, similarityScore: 0.41 },
      { name: "amazonprimevideo", subscribers: 320000, similarityScore: 0.39 },
      { name: "criterion", subscribers: 180000, similarityScore: 0.37 },
      { name: "dvdcollection", subscribers: 290000, similarityScore: 0.35 },
      { name: "hometheater", subscribers: 480000, similarityScore: 0.33 },
      { name: "screenwriting", subscribers: 320000, similarityScore: 0.31 },
      { name: "acting", subscribers: 240000, similarityScore: 0.29 },
      { name: "cinematography", subscribers: 380000, similarityScore: 0.27 },
      { name: "filmschool", subscribers: 190000, similarityScore: 0.25 },
      { name: "filmediting", subscribers: 210000, similarityScore: 0.23 },
      { name: "vfx", subscribers: 280000, similarityScore: 0.21 },
      { name: "soundtracks", subscribers: 170000, similarityScore: 0.19 },
      { name: "movietrailers", subscribers: 240000, similarityScore: 0.17 },
    ],
    askreddit: [
      { name: "askscience", subscribers: 2200000, similarityScore: 0.95 },
      { name: "explainlikeimfive", subscribers: 1900000, similarityScore: 0.93 },
      { name: "nostupidquestions", subscribers: 1700000, similarityScore: 0.91 },
      { name: "outoftheloop", subscribers: 1500000, similarityScore: 0.89 },
      { name: "tooafraidtoask", subscribers: 1100000, similarityScore: 0.87 },
      { name: "askhistorians", subscribers: 1300000, similarityScore: 0.85 },
      { name: "askmen", subscribers: 1400000, similarityScore: 0.83 },
      { name: "askwomen", subscribers: 1350000, similarityScore: 0.81 },
      { name: "askculinary", subscribers: 580000, similarityScore: 0.79 },
      { name: "askengineers", subscribers: 420000, similarityScore: 0.77 },
      { name: "askdocs", subscribers: 380000, similarityScore: 0.75 },
      { name: "askphilosophy", subscribers: 320000, similarityScore: 0.73 },
      { name: "askpsychology", subscribers: 290000, similarityScore: 0.71 },
      { name: "asksocialscience", subscribers: 240000, similarityScore: 0.69 },
      { name: "askacademia", subscribers: 210000, similarityScore: 0.67 },
      { name: "askeconomics", subscribers: 180000, similarityScore: 0.65 },
      { name: "askpolitics", subscribers: 240000, similarityScore: 0.63 },
      { name: "asklaw", subscribers: 190000, similarityScore: 0.61 },
      { name: "askstatistics", subscribers: 150000, similarityScore: 0.59 },
      { name: "askmath", subscribers: 170000, similarityScore: 0.57 },
      { name: "askphysics", subscribers: 190000, similarityScore: 0.55 },
      { name: "askchemistry", subscribers: 160000, similarityScore: 0.53 },
      { name: "askbiology", subscribers: 140000, similarityScore: 0.51 },
      { name: "askastronomy", subscribers: 130000, similarityScore: 0.49 },
      { name: "askgeology", subscribers: 120000, similarityScore: 0.47 },
      { name: "askanthropology", subscribers: 150000, similarityScore: 0.45 },
      { name: "askarchaeology", subscribers: 110000, similarityScore: 0.43 },
      { name: "askhistory", subscribers: 280000, similarityScore: 0.41 },
      { name: "asklinguistics", subscribers: 130000, similarityScore: 0.39 },
      { name: "askcomputerscience", subscribers: 170000, similarityScore: 0.37 },
      { name: "askprogramming", subscribers: 190000, similarityScore: 0.35 },
      { name: "askgaming", subscribers: 210000, similarityScore: 0.33 },
      { name: "askmovies", subscribers: 180000, similarityScore: 0.31 },
      { name: "askmusic", subscribers: 160000, similarityScore: 0.29 },
      { name: "askliterature", subscribers: 140000, similarityScore: 0.27 },
      { name: "askart", subscribers: 120000, similarityScore: 0.25 },
      { name: "askphotography", subscribers: 150000, similarityScore: 0.23 },
      { name: "askfitness", subscribers: 190000, similarityScore: 0.21 },
      { name: "asknutrition", subscribers: 170000, similarityScore: 0.19 },
      { name: "askhealth", subscribers: 160000, similarityScore: 0.17 },
    ],
    funny: [
      { name: "memes", subscribers: 3500000, similarityScore: 0.95 },
      { name: "jokes", subscribers: 2100000, similarityScore: 0.93 },
      { name: "comedyheaven", subscribers: 1800000, similarityScore: 0.91 },
      { name: "dankmemes", subscribers: 2900000, similarityScore: 0.89 },
      { name: "comedycemetery", subscribers: 950000, similarityScore: 0.87 },
      { name: "humor", subscribers: 750000, similarityScore: 0.85 },
      { name: "contagiouslaughter", subscribers: 1200000, similarityScore: 0.83 },
      { name: "unexpected", subscribers: 1600000, similarityScore: 0.81 },
      { name: "facepalm", subscribers: 2200000, similarityScore: 0.79 },
      { name: "therewasanattempt", subscribers: 1900000, similarityScore: 0.77 },
      { name: "whatcouldgowrong", subscribers: 2400000, similarityScore: 0.75 },
      { name: "instantregret", subscribers: 1100000, similarityScore: 0.73 },
      { name: "watchpeopledieinside", subscribers: 1800000, similarityScore: 0.71 },
      { name: "kidsarefuckingstupid", subscribers: 1500000, similarityScore: 0.69 },
      { name: "animalsbeingderps", subscribers: 1700000, similarityScore: 0.67 },
      { name: "animalsbeingjerks", subscribers: 1400000, similarityScore: 0.65 },
      { name: "animalsbeingbros", subscribers: 1600000, similarityScore: 0.63 },
      { name: "aww", subscribers: 3200000, similarityScore: 0.61 },
      { name: "eyebleach", subscribers: 1900000, similarityScore: 0.59 },
      { name: "wholesomememes", subscribers: 2100000, similarityScore: 0.57 },
      { name: "mademesmile", subscribers: 2400000, similarityScore: 0.55 },
      { name: "humansbeingbros", subscribers: 1800000, similarityScore: 0.53 },
      { name: "upliftingnews", subscribers: 1500000, similarityScore: 0.51 },
      { name: "dadjokes", subscribers: 1300000, similarityScore: 0.49 },
      { name: "puns", subscribers: 780000, similarityScore: 0.47 },
      { name: "standupcomedy", subscribers: 680000, similarityScore: 0.45 },
      { name: "comedycentral", subscribers: 520000, similarityScore: 0.43 },
      { name: "snl", subscribers: 480000, similarityScore: 0.41 },
      { name: "comedybangbang", subscribers: 320000, similarityScore: 0.39 },
      { name: "impracticaljokers", subscribers: 290000, similarityScore: 0.37 },
      { name: "whoselineisitanyway", subscribers: 240000, similarityScore: 0.35 },
      { name: "30rock", subscribers: 210000, similarityScore: 0.33 },
      { name: "theofficememes", subscribers: 580000, similarityScore: 0.31 },
      { name: "brooklynninenine", subscribers: 480000, similarityScore: 0.29 },
      { name: "parksandrec", subscribers: 420000, similarityScore: 0.27 },
      { name: "community", subscribers: 380000, similarityScore: 0.25 },
      { name: "scrubs", subscribers: 320000, similarityScore: 0.23 },
      { name: "iasip", subscribers: 480000, similarityScore: 0.21 },
      { name: "southpark", subscribers: 420000, similarityScore: 0.19 },
      { name: "simpsons", subscribers: 380000, similarityScore: 0.17 },
    ],
  }

  // Generate random related subreddits if we don't have predefined ones
  if (!relatedSubredditsMap[subreddit]) {
    const randomSubreddits = generateRandomRelatedSubreddits(subreddit)
    return randomSubreddits
  }

  return relatedSubredditsMap[subreddit].map((sub) => ({
    ...sub,
    description: `A community focused on ${sub.name} content and discussions.`,
    url: `/r/${sub.name}`,
  }))
}

// Generate random related subreddits for inputs we don't have predefined data for
function generateRandomRelatedSubreddits(subreddit: string) {
  const prefixes = [
    "true",
    "ask",
    "learn",
    "discuss",
    "meta",
    "pro",
    "amateur",
    "casual",
    "serious",
    "best",
    "official",
    "real",
    "actual",
    "top",
    "my",
    "our",
    "your",
    "the",
    "all",
    "daily",
    "weekly",
    "monthly",
    "yearly",
  ]
  const suffixes = [
    "s",
    "discussion",
    "help",
    "advice",
    "memes",
    "pics",
    "talk",
    "community",
    "enthusiasts",
    "fans",
    "lovers",
    "haters",
    "experts",
    "newbies",
    "veterans",
    "club",
    "group",
    "forum",
    "board",
    "hub",
    "central",
    "world",
    "universe",
    "network",
    "nation",
    "empire",
    "republic",
    "kingdom",
    "society",
    "association",
    "guild",
    "alliance",
    "union",
    "federation",
    "coalition",
    "league",
    "circle",
    "squad",
    "team",
    "crew",
    "gang",
    "family",
    "tribe",
    "clan",
    "cult",
    "sect",
    "order",
    "brotherhood",
    "sisterhood",
  ]
  const related = [
    "similar",
    "like",
    "about",
    "for",
    "on",
    "of",
    "with",
    "and",
    "or",
    "vs",
    "versus",
    "against",
    "over",
    "under",
    "beyond",
    "behind",
    "before",
    "after",
    "during",
    "without",
    "within",
    "throughout",
    "across",
    "around",
    "between",
    "among",
    "alongside",
    "beside",
    "besides",
    "despite",
    "except",
    "including",
    "excluding",
    "regarding",
    "concerning",
    "involving",
    "affecting",
    "relating",
    "pertaining",
    "referring",
    "alluding",
    "implying",
    "suggesting",
    "indicating",
    "signifying",
    "denoting",
    "connoting",
    "meaning",
    "representing",
    "symbolizing",
    "typifying",
    "exemplifying",
    "illustrating",
    "demonstrating",
    "showing",
    "revealing",
    "disclosing",
    "exposing",
    "uncovering",
    "discovering",
    "finding",
    "locating",
    "identifying",
    "recognizing",
    "knowing",
    "understanding",
    "comprehending",
    "grasping",
    "realizing",
    "appreciating",
    "valuing",
    "treasuring",
    "cherishing",
    "adoring",
    "loving",
    "liking",
    "enjoying",
    "savoring",
    "relishing",
    "delighting",
    "reveling",
    "basking",
    "indulging",
    "partaking",
    "participating",
    "engaging",
    "involving",
    "committing",
    "dedicating",
    "devoting",
    "consecrating",
    "pledging",
    "promising",
    "vowing",
    "swearing",
    "affirming",
    "declaring",
    "proclaiming",
    "announcing",
    "stating",
    "saying",
    "telling",
    "informing",
    "notifying",
    "alerting",
    "warning",
    "cautioning",
    "advising",
    "counseling",
    "guiding",
    "directing",
    "leading",
    "steering",
    "piloting",
    "navigating",
    "charting",
    "mapping",
    "plotting",
    "planning",
    "designing",
    "creating",
    "making",
    "building",
    "constructing",
    "developing",
    "producing",
    "generating",
    "forming",
    "shaping",
    "molding",
    "fashioning",
    "crafting",
    "forging",
    "manufacturing",
    "fabricating",
    "assembling",
    "compiling",
    "composing",
    "constituting",
    "establishing",
    "instituting",
    "founding",
    "originating",
    "initiating",
    "starting",
    "beginning",
    "commencing",
    "launching",
    "introducing",
    "presenting",
    "offering",
    "providing",
    "supplying",
    "furnishing",
    "equipping",
    "outfitting",
    "arming",
    "preparing",
    "readying",
    "arranging",
    "organizing",
    "coordinating",
    "managing",
    "administering",
    "supervising",
    "overseeing",
    "monitoring",
    "watching",
    "observing",
    "witnessing",
    "seeing",
    "viewing",
    "looking",
    "gazing",
    "staring",
    "glaring",
    "glancing",
    "glimpsing",
    "peeking",
    "peering",
    "squinting",
    "scanning",
    "surveying",
    "examining",
    "inspecting",
    "scrutinizing",
    "analyzing",
    "studying",
    "investigating",
    "researching",
    "exploring",
    "probing",
    "delving",
    "digging",
    "mining",
    "excavating",
    "unearthing",
    "discovering",
    "finding",
    "locating",
    "identifying",
    "recognizing",
    "knowing",
    "understanding",
  ]

  // Generate a large set of related terms
  const relatedTerms = [
    subreddit,
    ...prefixes.map((prefix) => `${prefix}${subreddit}`),
    ...suffixes.map((suffix) => `${subreddit}${suffix}`),
    ...related.map((rel) => `${rel}${subreddit}`),
    ...related.map((rel) => `${subreddit}${rel}`),
  ]

  // Take a larger selection of related terms (20-40)
  const count = Math.floor(Math.random() * 21) + 20 // 20-40 results
  const selectedTerms = relatedTerms.sort(() => Math.random() - 0.5).slice(0, count)

  return selectedTerms.map((name, index) => {
    const similarityScore = Math.max(0.1, 0.95 - index * 0.02) // Gradually decrease similarity score
    const subscribers = Math.floor(Math.random() * 900000) + 100000

    return {
      name,
      subscribers,
      description: `A community related to ${subreddit} with focus on ${name}.`,
      url: `/r/${name}`,
      similarityScore,
    }
  })
}
